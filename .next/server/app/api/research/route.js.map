{"version":3,"file":"app/api/research/route.js","mappings":"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","sources":["webpack://_N_E/./server/promptTemplates.ts","webpack://_N_E/./app/api/research/route.ts","webpack://_N_E/./app/api/research/route.ts?f598","webpack://_N_E/?d00e","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/external commonjs \"node:async_hooks\""],"sourcesContent":["export const researchPrompt = ({ role, tasks, resume }: any) => `\nYou are an AI researcher conducting a comprehensive analysis of AI automation risk for the role: ${role}.\n\n**ROLE CONTEXT:**\n- Position: ${role}\n- Weekly task breakdown: ${JSON.stringify(tasks)}\n- Professional background: ${resume?.slice(0, 800)}\n\n**RESEARCH REQUIREMENTS:**\nFor each major task category, provide:\n1. **Risk Assessment**: High (actively being automated) | Moderate (tools emerging) | Low (human-centric)\n2. **Evidence**: Specific AI tools, companies, or research directly relevant to this task\n3. **Timeline**: When automation might significantly impact this task\n4. **Source URLs**: Verifiable links to recent developments (2023-2024 preferred)\n\n**OUTPUT FORMAT:**\nReturn ONLY valid JSON in this exact structure:\n{\n  \"taskFacts\": [\n    {\n      \"task\": \"specific task name\",\n      \"riskLevel\": \"High|Moderate|Low\", \n      \"evidence\": \"detailed description of AI tools/developments affecting this task\",\n      \"impact\": \"percentage or description of potential automation\",\n      \"timeline\": \"estimated timeframe for significant impact\",\n      \"sourceUrl\": \"verifiable URL\",\n      \"toolsExample\": \"specific AI tools/platforms mentioned\"\n    }\n  ],\n  \"macroStats\": [\n    {\n      \"statistic\": \"industry-wide AI adoption or job impact data\",\n      \"source\": \"research organization or credible publication\",\n      \"url\": \"source URL\",\n      \"year\": \"2023 or 2024\",\n      \"relevance\": \"how this relates to the specific role\"\n    }\n  ],\n  \"industryContext\": {\n    \"overview\": \"2-3 sentence summary of AI impact in this industry\",\n    \"keyTrends\": [\"trend1\", \"trend2\", \"trend3\"],\n    \"timeHorizon\": \"overall timeline for major disruption in this field\"\n  }\n}\n\nFocus on concrete, recent developments with credible sources. Avoid speculation.`;\n\nexport const analysisPrompt = (json: string, userProfile?: any) => `\nYou are an expert AI risk analyst conducting a comprehensive, personalized career assessment. Use O3-style step-by-step reasoning to analyze this specific professional's unique situation.\n\n**INPUT DATA:** ${json}\n\n**USER PROFILE CONTEXT:**\n${userProfile ? `\n- Role: ${userProfile.role}\n- Experience Level: ${userProfile.yearsExperience}\n- Company Size: ${userProfile.companySize || 'Not specified'}\n- Daily Work Summary: ${userProfile.dailyWorkSummary?.slice(0, 500)}\n- Key Skills: ${userProfile.keySkills || 'Not specified'}\n- Resume/Background: ${userProfile.resume?.slice(0, 800)}\n- LinkedIn Profile: ${userProfile.linkedinData ? 'Analyzed' : 'Not provided'}\n` : 'Limited profile data available'}\n\n**REASONING METHODOLOGY:**\nApply step-by-step analysis with explicit reasoning traces:\n\n1. **Profile Analysis**: Examine the user's specific background, skills, and current role\n2. **Task Mapping**: Map their daily work to automation risk categories\n3. **Evidence Evaluation**: Assess research evidence against their specific context\n4. **Risk Calculation**: Apply weighted scoring based on their actual task distribution\n5. **Personalized Recommendations**: Generate advice specific to their career stage and skills\n\n**SCORING FORMULA:**\nCalculate risk score: S = Σ(task_hours × risk_weight) / total_hours × 100\n- High Risk = 1.0 weight\n- Moderate Risk = 0.6 weight  \n- Low Risk = 0.3 weight\n\n**OUTPUT REQUIREMENTS:**\nGenerate exactly two sections separated by \"---FULL_REPORT---\":\n\n**SECTION 1: PREVIEW (Maximum 300 words)**\nCreate a polished, professional preview with:\n- Opening statement about AI transformation in their specific field/role\n- 3-4 key findings directly relevant to their background\n- Risk score with interpretation specific to their experience level\n- One immediately actionable tip based on their current skills\n- Inline citations using [1], [2], etc.\n\n**SECTION 2: FULL REPORT (Comprehensive Markdown)**\nGenerate a detailed, personalized markdown report with these sections:\n\n## Executive Summary\n- Brief overview of findings specific to this professional's background\n- How their experience level and company context affects risk\n- Key differentiators in their current role\n\n## Personalized Risk Assessment\n**Overall Risk Score: [X]/100 ([Risk Level])**\n\n### Your Specific Situation\n**Reasoning Trace:**\n1. **Current Role Analysis**: [Analyze their specific job title and responsibilities]\n2. **Experience Factor**: [How their years of experience affects automation risk]\n3. **Company Context**: [How their company size/type impacts risk timeline]\n4. **Skill Portfolio**: [Assessment of their current skills vs. automation trends]\n\n### Task-by-Task Analysis\nFor each of their reported tasks:\n- **[Specific Task from their daily work]** - Risk Level: High/Moderate/Low\n  - **Your Context**: How you currently perform this task\n  - **AI Capabilities**: Current automation tools affecting this work\n  - **Timeline**: When this might impact your specific role\n  - **Evidence**: Research findings [1]\n\n## Your Career Context Analysis\n### Background Assessment\n- **Professional Journey**: Analysis of their career progression\n- **Current Positioning**: Strengths and vulnerabilities in their role\n- **Industry Context**: How their specific industry/company type affects risk\n\n### Skills Gap Analysis\n**Your Current Skills vs. Future Needs:**\n- **Strengths to Leverage**: Skills that remain valuable\n- **Areas for Development**: Specific gaps to address\n- **Strategic Advantages**: Unique aspects of their background\n\n## Timeline & Impact Projections\n**For Your Specific Role:**\n\n**Immediate (0-12 months):**\n- Tools likely to affect your daily work\n- Immediate actions based on your current situation\n\n**Medium-term (1-3 years):**\n- Changes specific to your role and industry\n- Strategic positioning opportunities\n\n**Long-term (3-5 years):**\n- Transformation outlook for your career path\n- Evolution opportunities based on your background\n\n## Personalized Mitigation Strategies\n### High-Priority Actions (Based on Your Profile)\n1. **Skill Development**: Specific to your current level and background\n2. **Career Positioning**: Leveraging your existing experience\n3. **Industry Adaptation**: Relevant to your sector and company type\n\n### Your 90-Day Action Plan\n**Immediate Steps (Based on Your Current Role):**\n- [Specific actions relevant to their daily work]\n- [Skills to start developing given their background]\n- [Tools to explore in their current context]\n\n**Medium-term Goals (Leveraging Your Experience):**\n- [Career development specific to their experience level]\n- [Networking strategies for their industry]\n- [Skill certifications relevant to their field]\n\n### Recommended Focus Areas for [Their Role]\n- **Technical Skills**: Specific to their reported tools and tasks\n- **Strategic Capabilities**: Building on their experience level\n- **Industry Knowledge**: Deepening expertise in their sector\n- **Leadership/Management**: If appropriate for their experience level\n\n## Market Intelligence for Your Industry\n- **Adoption Rates**: In companies similar to theirs\n- **Competitive Landscape**: Relevant to their sector\n- **Investment Trends**: Affecting their industry specifically\n\n## Evidence-Based Reasoning\n### Research Evaluation Process\n1. **Relevance Assessment**: How each piece of evidence applies to their situation\n2. **Timeline Validation**: Realistic timelines given their industry context\n3. **Impact Probability**: Likelihood of affecting their specific role\n\n### Key Findings Interpretation\n**For Your Background:**\n- [Specific interpretation of research for their role]\n- [How general trends apply to their specific situation]\n- [Unique factors in their case]\n\n## Strategic Recommendations\n### Career Evolution Path\n**Building on Your [X] Years of Experience:**\n- **Short-term positioning** (6-12 months)\n- **Medium-term pivots** (1-2 years)  \n- **Long-term strategy** (3-5 years)\n\n### Competitive Differentiation\n**Your Unique Value Proposition:**\n- How to leverage current experience and skills\n- Areas where human expertise remains critical in their field\n- Strategic positioning for the AI era\n\n## Sources & References\n[1] [Source description with specific relevance to their role] - URL\n[2] [Source description] - URL\n[etc.]\n\n**CRITICAL REQUIREMENTS:**\n- Reference their specific daily tasks, skills, and background throughout\n- Make all recommendations contextual to their experience level and industry\n- Include step-by-step reasoning for risk assessments\n- Provide actionable advice specific to their current situation\n- Use their actual job title, company context, and reported skills\n- Show clear logical connections between evidence and their specific case\n- If insufficient personalization data: note limitations but provide best possible analysis\n\nGenerate the complete personalized analysis now:`;\n\nexport const linkedinPrompt = (profileData: string) => `\nYou are analyzing a LinkedIn profile to extract professional information for AI replacement risk assessment.\n\n**LINKEDIN PROFILE DATA:**\n${profileData}\n\n**EXTRACTION REQUIREMENTS:**\nExtract and structure the following information:\n\n{\n  \"personalInfo\": {\n    \"name\": \"full name\",\n    \"currentTitle\": \"current job title\",\n    \"company\": \"current company\",\n    \"location\": \"current location\"\n  },\n  \"experience\": {\n    \"yearsTotal\": \"total years of experience\",\n    \"currentRole\": {\n      \"title\": \"current position\",\n      \"company\": \"company name\", \n      \"duration\": \"time in current role\",\n      \"description\": \"role description and responsibilities\"\n    },\n    \"previousRoles\": [\n      {\n        \"title\": \"job title\",\n        \"company\": \"company name\",\n        \"duration\": \"time period\",\n        \"keyResponsibilities\": [\"responsibility1\", \"responsibility2\"]\n      }\n    ]\n  },\n  \"skills\": {\n    \"technical\": [\"technical skill 1\", \"technical skill 2\"],\n    \"soft\": [\"soft skill 1\", \"soft skill 2\"],\n    \"tools\": [\"tool 1\", \"tool 2\"],\n    \"certifications\": [\"cert 1\", \"cert 2\"]\n  },\n  \"education\": [\n    {\n      \"degree\": \"degree type\",\n      \"field\": \"field of study\", \n      \"institution\": \"school name\",\n      \"year\": \"graduation year\"\n    }\n  ],\n  \"dailyTasks\": \"inferred daily responsibilities based on current and recent roles\",\n  \"careerCategory\": \"best matching category: designer|product-manager|marketing|accounting|legal|other\",\n  \"companySize\": \"inferred company size: startup|small|medium|large\"\n}\n\nFocus on extracting concrete, specific information. If data is missing, mark as \"not_available\".`;\n\nexport const webBrowsePrompt = (linkedinUrl: string) => `\nBrowse this LinkedIn profile URL and extract comprehensive professional information: ${linkedinUrl}\n\nFocus on:\n1. Current job title and company\n2. Work experience and career progression  \n3. Skills and technical competencies\n4. Education and certifications\n5. Key responsibilities and achievements\n6. Industry and functional area\n\nReturn the extracted information in a structured format that can be used for AI replacement risk analysis.`; ","import { NextRequest, NextResponse } from 'next/server';\nimport { createClient } from '@supabase/supabase-js';\nimport OpenAI from 'openai';\nimport { researchPrompt, linkedinPrompt } from '@/server/promptTemplates';\n\nexport const runtime = 'edge';\n\n// Function to sanitize text for database insertion\nfunction sanitizeText(text: string): string {\n  if (!text) return '';\n  \n  return text\n    // Remove null bytes and other problematic Unicode characters\n    .replace(/\\0/g, '')\n    // Normalize Unicode\n    .normalize('NFC')\n    // Remove or replace problematic escape sequences\n    .replace(/\\\\u[0-9a-fA-F]{4}/g, (match) => {\n      try {\n        return JSON.parse(`\"${match}\"`);\n      } catch {\n        return '';\n      }\n    })\n    // Limit length to prevent oversized content\n    .substring(0, 50000);\n}\n\n// Function to analyze LinkedIn profile using web browsing\nasync function analyzeLinkedInProfile(openai: OpenAI, linkedinUrl: string): Promise<any> {\n  console.log('🔗 [Research API] Analyzing LinkedIn profile:', linkedinUrl);\n  \n  try {\n    // Use GPT-4 with web browsing to analyze LinkedIn profile\n    const linkedinAnalysis = await openai.chat.completions.create({\n      model: 'gpt-4o',\n      temperature: 0.1,\n      messages: [\n        {\n          role: 'system',\n          content: `You are a professional profile analyzer. I will give you a LinkedIn URL and you need to extract professional information from it. \n\nExtract the following information:\n- Current job title and company\n- Years of experience (estimate from career progression)\n- Key skills and technologies\n- Daily responsibilities (infer from job titles and descriptions)\n- Industry and functional area\n- Education background\n- Career progression pattern\n\nReturn the information in a structured JSON format like this:\n{\n  \"currentTitle\": \"job title\",\n  \"company\": \"company name\",\n  \"yearsExperience\": \"estimated years\",\n  \"skills\": [\"skill1\", \"skill2\"],\n  \"dailyTasks\": \"inferred daily responsibilities\",\n  \"industry\": \"industry sector\",\n  \"education\": \"education background\",\n  \"careerProgression\": \"career trajectory analysis\"\n}\n\nIf you cannot access the profile or extract information, return {\"error\": \"Unable to analyze profile\", \"reason\": \"explanation\"}.`\n        },\n        {\n          role: 'user',\n          content: `Please analyze this LinkedIn profile and extract professional information: ${linkedinUrl}`\n        }\n      ]\n    });\n\n    const responseContent = linkedinAnalysis.choices[0].message.content;\n    if (!responseContent) {\n      throw new Error('Empty response from LinkedIn analysis');\n    }\n\n    try {\n      const profileData = JSON.parse(responseContent);\n      console.log('✅ [Research API] LinkedIn profile analyzed successfully');\n      return profileData;\n    } catch (parseError) {\n      console.error('❌ [Research API] Failed to parse LinkedIn analysis:', parseError);\n      console.log('📄 [Research API] Raw response:', responseContent);\n      \n      // Return the raw text if JSON parsing fails\n      return {\n        error: false,\n        rawAnalysis: responseContent,\n        extractedInfo: \"LinkedIn profile analysis completed but in text format\"\n      };\n    }\n  } catch (error) {\n    console.error('❌ [Research API] LinkedIn analysis failed:', error);\n    return {\n      error: true,\n      reason: error instanceof Error ? error.message : 'Unknown error during LinkedIn analysis'\n    };\n  }\n}\n\nexport async function POST(req: NextRequest) {\n  console.log('🔍 [Research API] Starting request...');\n  \n  try {\n    const body = await req.json();\n    console.log('📋 [Research API] Request body:', JSON.stringify(body, null, 2));\n    \n    const { role, tasks, resume, linkedinUrl, profileData } = body;\n\n    // Validate required fields\n    if (!role) {\n      console.error('❌ [Research API] Missing role field');\n      return NextResponse.json({ error: 'Role is required' }, { status: 400 });\n    }\n\n    // Sanitize text inputs\n    const sanitizedRole = sanitizeText(role);\n    let sanitizedResume = sanitizeText(resume || '');\n    \n    console.log('🧹 [Research API] Text sanitization complete');\n    console.log('📏 [Research API] Sanitized resume length:', sanitizedResume.length);\n    console.log('🔗 [Research API] LinkedIn URL provided:', !!linkedinUrl);\n\n    console.log('🔗 [Research API] Creating Supabase client...');\n    const supabase = createClient(\n      process.env.SUPABASE_URL!,\n      process.env.SUPABASE_SERVICE_ROLE_KEY!\n    );\n    console.log('✅ [Research API] Supabase client created');\n\n    console.log('🤖 [Research API] Creating OpenAI client...');\n    const openai = new OpenAI({ \n      apiKey: process.env.OPENAI_API_KEY,\n      timeout: 15000 // Shorter timeout for faster response\n    });\n\n    // LinkedIn Profile Analysis (with timeout)\n    let linkedinData = null;\n    if (linkedinUrl && linkedinUrl.trim()) {\n      console.log('🔗 [Research API] Processing LinkedIn profile...');\n      try {\n        linkedinData = await Promise.race([\n          analyzeLinkedInProfile(openai, linkedinUrl.trim()),\n          new Promise((_, reject) => \n            setTimeout(() => reject(new Error('LinkedIn analysis timeout')), 10000)\n          )\n        ]);\n        \n        if (linkedinData && !linkedinData.error) {\n          console.log('✅ [Research API] LinkedIn data extracted successfully');\n          \n          // Enhance resume content with LinkedIn data\n          if (linkedinData.dailyTasks) {\n            sanitizedResume += `\\n\\nLinkedIn Profile Insights:\\n${linkedinData.dailyTasks}`;\n          }\n          if (linkedinData.skills && Array.isArray(linkedinData.skills)) {\n            sanitizedResume += `\\n\\nKey Skills: ${linkedinData.skills.join(', ')}`;\n          }\n          if (linkedinData.careerProgression) {\n            sanitizedResume += `\\n\\nCareer Progression: ${linkedinData.careerProgression}`;\n          }\n          \n          console.log('📏 [Research API] Enhanced resume length after LinkedIn:', sanitizedResume.length);\n        } else {\n          console.log('⚠️ [Research API] LinkedIn analysis failed, continuing without LinkedIn data');\n        }\n      } catch (linkedinError) {\n        console.log('⚠️ [Research API] LinkedIn analysis timeout/error, continuing without LinkedIn data:', linkedinError);\n        linkedinData = null;\n      }\n    }\n\n    console.log('💾 [Research API] Inserting profile into database...');\n    const { data: profile, error: dbError } = await supabase\n      .from('profiles')\n      .insert([{ \n        role: sanitizedRole, \n        resume: sanitizedResume, \n        task_hours: tasks || {},\n        email: null, // We're not collecting email in the current flow\n        // Store additional profile data as JSON\n        profile_data: profileData ? {\n          careerCategory: profileData.careerCategory,\n          yearsExperience: profileData.yearsExperience,\n          companySize: profileData.companySize,\n          dailyWorkSummary: profileData.dailyWorkSummary,\n          keySkills: profileData.keySkills,\n          linkedinUrl: linkedinUrl\n        } : null,\n        linkedin_data: linkedinData && !linkedinData.error ? linkedinData : null\n      }])\n      .select()\n      .single();\n\n    if (dbError) {\n      console.error('❌ [Research API] Database error:', dbError);\n      return NextResponse.json({ error: 'Database error: ' + dbError.message }, { status: 500 });\n    }\n\n    console.log('✅ [Research API] Profile created:', profile);\n\n    // Do the AI research and analysis synchronously with timeout\n    console.log('📝 [Research API] Starting AI research and analysis...');\n    \n    try {\n      // Set a timeout for the entire analysis process\n      const analysisPromise = (async () => {\n        console.log('📝 [Research API] Generating research prompt...');\n        const prompt = researchPrompt({ \n          role: sanitizedRole, \n          tasks, \n          resume: sanitizedResume,\n          linkedinData: linkedinData || null,\n          profileData: profileData || null\n        });\n        console.log('📄 [Research API] Prompt length:', prompt.length);\n\n        console.log('🚀 [Research API] Calling OpenAI API...');\n        const research = await openai.chat.completions.create({\n          model: 'gpt-4o',\n          temperature: 0.2,\n          messages: [{ role: 'system', content: prompt }]\n        });\n\n        console.log('✅ [Research API] OpenAI response received');\n        console.log('📊 [Research API] Response usage:', research.usage);\n\n        const responseContent = research.choices[0].message.content;\n        console.log('📄 [Research API] Response content:', responseContent?.substring(0, 500) + '...');\n\n        if (!responseContent) {\n          throw new Error('Empty response from OpenAI');\n        }\n\n        console.log('🔧 [Research API] Parsing JSON response...');\n        let evidence;\n        try {\n          evidence = JSON.parse(responseContent);\n          console.log('✅ [Research API] JSON parsed successfully');\n          \n          // Add LinkedIn data to evidence if available\n          if (linkedinData && !linkedinData.error) {\n            evidence.linkedinProfile = linkedinData;\n          }\n        } catch (parseError) {\n          console.error('❌ [Research API] JSON parse error:', parseError);\n          console.log('📄 [Research API] Raw content that failed to parse:', responseContent);\n          throw parseError;\n        }\n\n        console.log('🔥 [Research API] Calling analyze API directly...');\n        const analysisUrl = `${process.env.NEXT_PUBLIC_SITE_URL}/api/analyze`;\n        console.log('🎯 [Research API] Analysis URL:', analysisUrl);\n        \n        const analysisResponse = await fetch(analysisUrl, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ profile_id: profile.id, evidence }),\n        });\n\n        if (!analysisResponse.ok) {\n          const errorText = await analysisResponse.text();\n          console.error('❌ [Research API] Analysis failed:', analysisResponse.status, errorText);\n          throw new Error(`Analysis API failed: ${analysisResponse.status} ${errorText}`);\n        }\n\n        const result = await analysisResponse.json();\n        console.log('✅ [Research API] Analysis completed successfully:', result);\n        return result;\n      })();\n\n      // Wait for analysis with 30 second timeout\n      await Promise.race([\n        analysisPromise,\n        new Promise((_, reject) => \n          setTimeout(() => reject(new Error('Analysis timeout after 30 seconds')), 30000)\n        )\n      ]);\n\n      console.log('✅ [Research API] Full analysis pipeline completed');\n      \n    } catch (analysisError) {\n      console.error('💥 [Research API] Analysis failed:', analysisError);\n      // Don't fail the entire request if analysis fails - user can retry\n      console.log('⚠️ [Research API] Continuing despite analysis failure');\n    }\n\n    console.log('✅ [Research API] Request completed successfully');\n    return NextResponse.json({ \n      status: 'processing', \n      profile_id: profile.id,\n      message: 'Analysis started, results will be available shortly'\n    });\n\n  } catch (error) {\n    console.error('💥 [Research API] Unexpected error:', error);\n    console.error('📚 [Research API] Error stack:', error instanceof Error ? error.stack : 'No stack trace');\n    return NextResponse.json(\n      { error: 'Internal server error: ' + (error instanceof Error ? error.message : String(error)) }, \n      { status: 500 }\n    );\n  }\n} ","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Users/miguel/Downloads/AICareerShield/app/api/research/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/research/route\",\n        pathname: \"/api/research\",\n        filename: \"route\",\n        bundlePath: \"app/api/research/route\"\n    },\n    resolvedPagePath: \"/Users/miguel/Downloads/AICareerShield/app/api/research/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","var _self___RSC_MANIFEST;\nimport { createServerModuleMap } from \"next/dist/server/app-render/action-utils\";\nimport { setReferenceManifestsSingleton } from \"next/dist/server/app-render/encryption-utils\";\nimport { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fresearch%2Froute&page=%2Fapi%2Fresearch%2Froute&pagePath=private-next-app-dir%2Fapi%2Fresearch%2Froute.ts&appDir=%2FUsers%2Fmiguel%2FDownloads%2FAICareerShield%2Fapp&appPaths=%2Fapi%2Fresearch%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/research/route.ts?__next_edge_ssr_entry__\";\nconst nextConfig = {\"env\":{},\"webpack\":null,\"eslint\":{\"ignoreDuringBuilds\":false},\"typescript\":{\"ignoreBuildErrors\":false,\"tsconfigPath\":\"tsconfig.json\"},\"distDir\":\".next\",\"cleanDistDir\":true,\"assetPrefix\":\"\",\"cacheMaxMemorySize\":52428800,\"configOrigin\":\"next.config.js\",\"useFileSystemPublicRoutes\":true,\"generateEtags\":true,\"pageExtensions\":[\"tsx\",\"ts\",\"jsx\",\"js\"],\"poweredByHeader\":true,\"compress\":true,\"images\":{\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"loaderFile\":\"\",\"domains\":[],\"disableStaticImages\":false,\"minimumCacheTTL\":60,\"formats\":[\"image/webp\"],\"dangerouslyAllowSVG\":false,\"contentSecurityPolicy\":\"script-src 'none'; frame-src 'none'; sandbox;\",\"contentDispositionType\":\"attachment\",\"remotePatterns\":[],\"unoptimized\":false},\"devIndicators\":{\"position\":\"bottom-left\"},\"onDemandEntries\":{\"maxInactiveAge\":60000,\"pagesBufferLength\":5},\"amp\":{\"canonicalBase\":\"\"},\"basePath\":\"\",\"sassOptions\":{},\"trailingSlash\":false,\"i18n\":null,\"productionBrowserSourceMaps\":false,\"excludeDefaultMomentLocales\":true,\"serverRuntimeConfig\":{},\"publicRuntimeConfig\":{},\"reactProductionProfiling\":false,\"reactStrictMode\":null,\"reactMaxHeadersLength\":6000,\"httpAgentOptions\":{\"keepAlive\":true},\"logging\":{},\"expireTime\":31536000,\"staticPageGenerationTimeout\":60,\"modularizeImports\":{\"@mui/icons-material\":{\"transform\":\"@mui/icons-material/{{member}}\"},\"lodash\":{\"transform\":\"lodash/{{member}}\"}},\"outputFileTracingRoot\":\"/Users/miguel/Downloads/AICareerShield\",\"experimental\":{\"nodeMiddleware\":false,\"cacheLife\":{\"default\":{\"stale\":300,\"revalidate\":900,\"expire\":4294967294},\"seconds\":{\"stale\":0,\"revalidate\":1,\"expire\":60},\"minutes\":{\"stale\":300,\"revalidate\":60,\"expire\":3600},\"hours\":{\"stale\":300,\"revalidate\":3600,\"expire\":86400},\"days\":{\"stale\":300,\"revalidate\":86400,\"expire\":604800},\"weeks\":{\"stale\":300,\"revalidate\":604800,\"expire\":2592000},\"max\":{\"stale\":300,\"revalidate\":2592000,\"expire\":4294967294}},\"cacheHandlers\":{},\"cssChunking\":true,\"multiZoneDraftMode\":false,\"appNavFailHandling\":false,\"prerenderEarlyExit\":true,\"serverMinification\":true,\"serverSourceMaps\":false,\"linkNoTouchStart\":false,\"caseSensitiveRoutes\":false,\"clientSegmentCache\":false,\"dynamicOnHover\":false,\"preloadEntriesOnStart\":true,\"clientRouterFilter\":true,\"clientRouterFilterRedirects\":false,\"fetchCacheKeyPrefix\":\"\",\"middlewarePrefetch\":\"flexible\",\"optimisticClientCache\":true,\"manualClientBasePath\":false,\"cpus\":13,\"memoryBasedWorkersCount\":false,\"imgOptConcurrency\":null,\"imgOptTimeoutInSeconds\":7,\"imgOptMaxInputPixels\":268402689,\"imgOptSequentialRead\":null,\"isrFlushToDisk\":true,\"workerThreads\":false,\"optimizeCss\":false,\"nextScriptWorkers\":false,\"scrollRestoration\":false,\"externalDir\":false,\"disableOptimizedLoading\":false,\"gzipSize\":true,\"craCompat\":false,\"esmExternals\":true,\"fullySpecified\":false,\"swcTraceProfiling\":false,\"forceSwcTransforms\":false,\"largePageDataBytes\":128000,\"typedRoutes\":false,\"typedEnv\":false,\"parallelServerCompiles\":false,\"parallelServerBuildTraces\":false,\"ppr\":false,\"authInterrupts\":false,\"webpackMemoryOptimizations\":false,\"optimizeServerReact\":true,\"useEarlyImport\":false,\"viewTransition\":false,\"routerBFCache\":false,\"staleTimes\":{\"dynamic\":0,\"static\":300},\"serverComponentsHmrCache\":true,\"staticGenerationMaxConcurrency\":8,\"staticGenerationMinPagesPerWorker\":25,\"dynamicIO\":false,\"inlineCss\":false,\"useCache\":false,\"optimizePackageImports\":[\"lucide-react\",\"date-fns\",\"lodash-es\",\"ramda\",\"antd\",\"react-bootstrap\",\"ahooks\",\"@ant-design/icons\",\"@headlessui/react\",\"@headlessui-float/react\",\"@heroicons/react/20/solid\",\"@heroicons/react/24/solid\",\"@heroicons/react/24/outline\",\"@visx/visx\",\"@tremor/react\",\"rxjs\",\"@mui/material\",\"@mui/icons-material\",\"recharts\",\"react-use\",\"effect\",\"@effect/schema\",\"@effect/platform\",\"@effect/platform-node\",\"@effect/platform-browser\",\"@effect/platform-bun\",\"@effect/sql\",\"@effect/sql-mssql\",\"@effect/sql-mysql2\",\"@effect/sql-pg\",\"@effect/sql-squlite-node\",\"@effect/sql-squlite-bun\",\"@effect/sql-squlite-wasm\",\"@effect/sql-squlite-react-native\",\"@effect/rpc\",\"@effect/rpc-http\",\"@effect/typeclass\",\"@effect/experimental\",\"@effect/opentelemetry\",\"@material-ui/core\",\"@material-ui/icons\",\"@tabler/icons-react\",\"mui-core\",\"react-icons/ai\",\"react-icons/bi\",\"react-icons/bs\",\"react-icons/cg\",\"react-icons/ci\",\"react-icons/di\",\"react-icons/fa\",\"react-icons/fa6\",\"react-icons/fc\",\"react-icons/fi\",\"react-icons/gi\",\"react-icons/go\",\"react-icons/gr\",\"react-icons/hi\",\"react-icons/hi2\",\"react-icons/im\",\"react-icons/io\",\"react-icons/io5\",\"react-icons/lia\",\"react-icons/lib\",\"react-icons/lu\",\"react-icons/md\",\"react-icons/pi\",\"react-icons/ri\",\"react-icons/rx\",\"react-icons/si\",\"react-icons/sl\",\"react-icons/tb\",\"react-icons/tfi\",\"react-icons/ti\",\"react-icons/vsc\",\"react-icons/wi\"]},\"htmlLimitedBots\":\"Mediapartners-Google|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti\",\"bundlePagesRouterDependencies\":false,\"configFile\":\"/Users/miguel/Downloads/AICareerShield/next.config.js\",\"configFileName\":\"next.config.js\",\"serverExternalPackages\":[\"pdf-parse\"],\"turbopack\":{\"root\":\"/Users/miguel/Downloads/AICareerShield\"}}\nconst maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\nconst rscManifest = (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST[\"/api/research/route\"];\nconst rscServerManifest = maybeJSONParse(self.__RSC_SERVER_MANIFEST);\nif (rscManifest && rscServerManifest) {\n    setReferenceManifestsSingleton({\n        page: \"/api/research/route\",\n        clientReferenceManifest: rscManifest,\n        serverActionsManifest: rscServerManifest,\n        serverModuleMap: createServerModuleMap({\n            serverActionsManifest: rscServerManifest\n        })\n    });\n}\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule, {\n    nextConfig\n});\n\n//# sourceMappingURL=edge-app-route.js.map","module.exports = require(\"node:buffer\");","module.exports = require(\"node:async_hooks\");"],"names":["researchPrompt","role","tasks","resume","JSON","stringify","slice","analysisPrompt","json","userProfile","yearsExperience","companySize","dailyWorkSummary","keySkills","linkedinData","runtime","sanitizeText","text","normalize","replace","parse","match","substring","analyzeLinkedInProfile","openai","linkedinUrl","console","log","responseContent","linkedinAnalysis","chat","completions","create","model","temperature","messages","content","choices","message","Error","profileData","parseError","error","rawAnalysis","extractedInfo","reason","POST","req","body","NextResponse","status","sanitizedRole","sanitizedResume","length","supabase","createClient","process","env","SUPABASE_URL","SUPABASE_SERVICE_ROLE_KEY","OpenAI","apiKey","OPENAI_API_KEY","timeout","trim","Promise","race","_","reject","setTimeout","dailyTasks","skills","Array","isArray","join","careerProgression","linkedinError","data","profile","dbError","from","insert","task_hours","email","profile_data","careerCategory","linkedin_data","select","single","analysisPromise","evidence","prompt","research","usage","linkedinProfile","analysisUrl","NEXT_PUBLIC_SITE_URL","analysisResponse","fetch","method","headers","profile_id","id","ok","errorText","result","analysisError","stack","String"],"sourceRoot":"","ignoreList":[]}